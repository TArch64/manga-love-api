version: 0.2

env:
  variables:
    ENV: "staging"
    DOCKER_BUILDKIT: 1
    BUILDKIT_INLINE_CACHE: 1
    CR_LABEL: "https://github.com/TArch64/manga-love-api"
    SECRETS_LOADER_DOWNLOAD: https://raw.githubusercontent.com/volunteer-delivery/secrets-loader/main/build/linux-arm64
    SECRETS_LOADER: "tmp/secrets-loader"
    ARTIFACT_DIR: "tmp/artifact"

phases:
  pre_build:
    commands:
      - curl $SECRETS_LOADER_DOWNLOAD -o $SECRETS_LOADER
      - chmod +x $SECRETS_LOADER
      - export $($SECRETS_LOADER get -r $AWS_REGION -p /manga-love-api/cr) > /dev/null
      - echo $CR_PASSWORD | docker login $CR_HOST -u $CR_USERNAME --password-stdin

      - export APP_VERSION="$CODEBUILD_BUILD_NUMBER"
      - export APP_IMAGE="$CR_HOST/$CR_USERNAME/manga-love-api"

      - docker pull $APP_IMAGE/base:latest || true
      - docker pull $APP_IMAGE/gateway:latest || true
      - docker pull $APP_IMAGE/auth:latest || true
      - docker pull $APP_IMAGE/mailer:latest || true
      - docker pull $APP_IMAGE/work:latest || true
      - docker pull $APP_IMAGE/uploader:latest || true
      - docker pull $APP_IMAGE/bull-admin:latest || true
      - docker pull $APP_IMAGE/nginx:latest || true



  build:
    commands:
      - >
        docker build \
          --tag $APP_IMAGE/base:latest \
          --tag $APP_IMAGE/base:$APP_VERSION \
          --file ci/$ENV/build/api-base.Dockerfile \
          --cache-from $APP_IMAGE/base:latest \
          --build-arg BUILDKIT_INLINE_CACHE \
          --build-arg CR_LABEL \
          .
      - docker push -a $APP_IMAGE/base

      - >
        docker build \
          --tag $APP_IMAGE/gateway:latest \
          --tag $APP_IMAGE/gateway:$APP_VERSION \
          --file ci/$ENV/build/microservice.Dockerfile \
          --cache-from $APP_IMAGE/base:$APP_VERSION \
          --cache-from $APP_IMAGE/gateway:latest \
          --build-arg BUILDKIT_INLINE_CACHE \
          --build-arg CR_LABEL \
          --build-arg APP_NAME=gateway \
          --build-arg APP_IMAGE \
          --build-arg APP_VERSION \
          .
      - docker push -a $APP_IMAGE/gateway

      - >
        docker build \
          --tag $APP_IMAGE/auth:latest \
          --tag $APP_IMAGE/auth:$APP_VERSION \
          --file ci/$ENV/build/microservice.Dockerfile \
          --cache-from $APP_IMAGE/base:$APP_VERSION \
          --cache-from $APP_IMAGE/auth:latest \
          --build-arg BUILDKIT_INLINE_CACHE \
          --build-arg CR_LABEL \
          --build-arg APP_NAME=auth \
          --build-arg APP_IMAGE \
          --build-arg APP_VERSION \
          .
      - docker push -a $APP_IMAGE/auth

      - >
        docker build \
          --tag $APP_IMAGE/mailer:latest \
          --tag $APP_IMAGE/mailer:$APP_VERSION \
          --file ci/$ENV/build/microservice.Dockerfile \
          --cache-from $APP_IMAGE/base:$APP_VERSION \
          --cache-from $APP_IMAGE/mailer:latest \
          --build-arg BUILDKIT_INLINE_CACHE \
          --build-arg CR_LABEL \
          --build-arg APP_NAME=mailer \
          --build-arg APP_IMAGE \
          --build-arg APP_VERSION \
          .
      - docker push -a $APP_IMAGE/mailer

      - >
        docker build \
          --tag $APP_IMAGE/work:latest \
          --tag $APP_IMAGE/work:$APP_VERSION \
          --file ci/$ENV/build/microservice.Dockerfile \
          --cache-from $APP_IMAGE/base:$APP_VERSION \
          --cache-from $APP_IMAGE/work:latest \
          --build-arg BUILDKIT_INLINE_CACHE \
          --build-arg CR_LABEL \
          --build-arg APP_NAME=work \
          --build-arg APP_IMAGE \
          --build-arg APP_VERSION \
          .
      - docker push -a $APP_IMAGE/work

      - >
        docker build \
          --tag $APP_IMAGE/uploader:latest \
          --tag $APP_IMAGE/uploader:$APP_VERSION \
          --file ci/$ENV/build/microservice.Dockerfile \
          --cache-from $APP_IMAGE/base:$APP_VERSION \
          --cache-from $APP_IMAGE/uploader:latest \
          --build-arg BUILDKIT_INLINE_CACHE \
          --build-arg CR_LABEL \
          --build-arg APP_NAME=uploader \
          --build-arg APP_IMAGE \
          --build-arg APP_VERSION \
          .
      - docker push -a $APP_IMAGE/uploader

      - >
        docker build \
          --tag $APP_IMAGE/bull-admin:latest \
          --tag $APP_IMAGE/bull-admin:$APP_VERSION \
          --file ci/$ENV/build/microservice.Dockerfile \
          --cache-from $APP_IMAGE/base:$APP_VERSION \
          --cache-from $APP_IMAGE/bull-admin:latest \
          --build-arg BUILDKIT_INLINE_CACHE \
          --build-arg CR_LABEL \
          --build-arg APP_NAME=bull-admin \
          --build-arg APP_IMAGE \
          --build-arg APP_VERSION \
          .
      - docker push -a $APP_IMAGE/bull-admin

      - >
        docker build \
          --tag $APP_IMAGE/nginx:latest \
          --tag $APP_IMAGE/nginx:$APP_VERSION \
          --file ci/$ENV/build/nginx.Dockerfile \
          --cache-from $APP_IMAGE/nginx \
          --build-arg BUILDKIT_INLINE_CACHE \
          --build-arg CR_LABEL \
          .
      - docker push -a $APP_IMAGE/nginx



  post_build:
    commands:
      - mkdir $ARTIFACT_DIR
      - echo $APP_VERSION >> $ARTIFACT_DIR/app-version
      - envsubst < ci/$ENV/docker-compose.yaml >> $ARTIFACT_DIR/docker-compose.yaml
      - cp ci/$ENV/appspec.yml $ARTIFACT_DIR/
      - cp -r ci/$ENV/hooks $ARTIFACT_DIR/
      - cp $SECRETS_LOADER $ARTIFACT_DIR/

artifacts:
  files: ['./**/*']
  base-directory: tmp/artifact
